<?xml version="1.0" encoding="utf-8"?>
<!--
说明：
    1. 文件的命名和加载顺序有关
       logback.xml早于application.yml加载，logback-spring.xml晚于application.yml加载
       如果logback配置需要使用application.yml中的属性，需要命名为logback-spring.xml
    2. logback使用application.yml中的属性
       使用springProperty才可使用application.yml中的值 可以设置默认值

-->
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <!-- log base path -->
    <springProperty scope="context" name="springAppName" source="spring.application.name" defaultValue="application"/>

    <!-- mac auto create folder restricted permissions  -->
    <springProfile name="dev | local">
        <!-- log base path -->
        <property name="logHome" value="./data/service-logs/${springAppName}" />
    </springProfile>
    <springProfile name="default">
        <!-- log base path -->
        <property name="logHome" value="/data/service-logs/${springAppName}" />
    </springProfile>



    <!-- You can override this to have a custom pattern -->
    <property name="CUSTOM_LOG_PATTERN"
              value="[%d{yyyy-MM-dd HH:mm:ss.sss}] [%C] [%t] [%L] [%-5p] %m%n"/>

    <!-- Appender to log to console -->
    <appender name="CONSOLE-LOG" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- Minimum logging level to be presented in the console logs-->
            <level>DEBUG</level>
        </filter>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--获取比info级别高(包括info级别)但除error级别的日志-->
    <appender name="FILE-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder>
            <pattern>${CUSTOM_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>

        <file>${logHome}/${springAppName}-info.log</file>

        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 滚动后的日志文件名 -->
            <fileNamePattern>${LOGBACK_ROLLINGPOLICY_FILE_NAME_PATTERN:-${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz}</fileNamePattern>
            <!-- 启动服务时，是否清理历史日志，一般不建议清理 -->
            <cleanHistoryOnStart>${LOGBACK_ROLLINGPOLICY_CLEAN_HISTORY_ON_START:-false}</cleanHistoryOnStart>
            <!-- 日志文件，到达多少容量，进行滚动 -->
            <maxFileSize>${LOGBACK_ROLLINGPOLICY_MAX_FILE_SIZE:-10MB}</maxFileSize>
            <!-- 日志文件的总大小，0 表示不限制 -->
            <totalSizeCap>${LOGBACK_ROLLINGPOLICY_TOTAL_SIZE_CAP:-0}</totalSizeCap>
            <!-- 日志文件的保留天数 -->
            <maxHistory>${LOGBACK_ROLLINGPOLICY_MAX_HISTORY:-30}</maxHistory>
        </rollingPolicy>
    </appender>


    <!-- 异步输出 -->
    <appender name="ASYNC-LOG" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>80</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="FILE-LOG"/>
    </appender>

    <springProfile name="dev | local">
        <root level="DEBUG">
            <appender-ref ref="CONSOLE-LOG"/>
            <appender-ref ref="FILE-LOG"/>
            <appender-ref ref="ASYNC-LOG"/>
        </root>
    </springProfile>

    <springProfile name="default">
        <root level="INFO">
            <appender-ref ref="CONSOLE-LOG"/>
            <appender-ref ref="FILE-LOG"/>
            <appender-ref ref="ASYNC-LOG"/>
        </root>
    </springProfile>
</configuration>
